{"+P站反代理切换":{"color":"#5b5","defaultProfileName":"真全网切换","name":"P站反代理切换","profileType":"SwitchProfile","revision":"16e1c90fb13","rules":[{"condition":{"conditionType":"HostWildcardCondition","pattern":"*pixiv*"},"profileName":"direct"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"i.pximg.net"},"profileName":"direct"}]},"+__ruleListOf_真全网切换":{"color":"#5b5","defaultProfileName":"direct","format":"Switchy","matchProfileName":"谷歌服务助手","name":"__ruleListOf_真全网切换","profileType":"RuleListProfile","revision":"16b0ec9053b","ruleList":"","sourceUrl":""},"+clash":{"bypassList":[{"conditionType":"BypassCondition","pattern":"127.0.0.1"},{"conditionType":"BypassCondition","pattern":"[::1]"},{"conditionType":"BypassCondition","pattern":"localhost"}],"color":"#47b","fallbackProxy":{"host":"127.0.0.1","port":7891,"scheme":"socks5"},"name":"clash","profileType":"FixedProfile","revision":"16ea300ee62"},"+ghelper":{"color":"#49afcd","name":"ghelper","pacScript":"var proxy = \"DIRECT\";\nvar direct = 'DIRECT;';\nvar user_direct_domains = {};\nvar user_proxy_domains = {};\nvar user_proxy = {};\nvar system_proxy_domains = {\n    \"10\": {\n        \"wikimedia.org\": 1,\n        \"google.com\": 1,\n        \"google.de\": 1,\n        \"google.fr\": 1,\n        \"google.com.hk\": 1,\n        \"google.com.sg\": 1,\n        \"google.com.tw\": 1,\n        \"google.co.jp\": 1,\n        \"google.com.za\": 1,\n        \"gstatic.com\": 1,\n        \"googleusercontent.com\": 1,\n        \"gvt2.com\": 1,\n        \"gvt3.com\": 1,\n        \"ggpht.com\": 1,\n        \"googleapis.com\": 1,\n        \"chrome.com\": 1,\n        \"googleadservices.com\": 1,\n        \"googlesyndication.com\": 1,\n        \"googlesource.com\": 1,\n        \"wikipedia.org\": 1,\n        \"pbskids.org\": 1,\n        \"dropbox.com\": 1,\n        \"googleblog.com\": 1,\n        \"appspot.com\": 1,\n        \"android.com\": 1,\n        \"github.com\": 1,\n        \"gmail.com\": 1,\n        \"googlegroups.com\": 1,\n        \"githubusercontent.com\": 1,\n        \"arxiv.org\": 1,\n        \"mediawiki.org\": 1\n    }\n};\nvar system_proxy = {\n    \"10\": \"HTTPS hk-hgc.ghelper.net:443;HTTPS hkbn-home-01.ghelper.net:443;HTTPS hk-hkt-05.ghelper.net:3389\"\n};\nvar hasOwnProperty = Object.hasOwnProperty;\nvar localTlds = {\n    \".localhost\": 1,\n    \".test\": 1\n};\nvar ipRegExp = new RegExp(/^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/);\nfunction convertAddress(ipchars) {\n    var bytes = ipchars.split('.');\n    var result = ((bytes[0] & 0xff) << 24) | ((bytes[1] & 0xff) << 16) | ((bytes[2] & 0xff) << 8) | (bytes[3] & 0xff);\n    return result;\n}\nfunction match(ip) {\n    var left = 0\n      , right = cnips.length;\n    do {\n        var mid = Math.floor((left + right) / 2)\n          , ipf = (ip & cnips[mid][1]) >>> 0\n          , m = (cnips[mid][0] & cnips[mid][1]) >>> 0;\n        if (ipf == m) {\n            return true;\n        } else if (ipf > m) {\n            left = mid + 1;\n        } else {\n            right = mid;\n        }\n    } while (left + 1 <= right)return false;\n}\nfunction testDomain(target, domains, cnRootIncluded) {\n    var idxA = target.lastIndexOf('.');\n    var idxB = target.lastIndexOf('.', idxA - 1);\n    var hasOwnProperty = Object.hasOwnProperty;\n    var suffix = cnRootIncluded ? target.substring(idxA + 1) : '';\n    if (suffix === 'cn') {\n        return true;\n    }\n    while (true) {\n        if (idxB === -1) {\n            if (hasOwnProperty.call(domains, target)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n        suffix = target.substring(idxB + 1);\n        if (hasOwnProperty.call(domains, suffix)) {\n            return true;\n        }\n        idxB = target.lastIndexOf('.', idxB - 1);\n    }\n}\nfunction isLocalTestDomain(domain) {\n    var tld = domain.substring(domain.lastIndexOf('.'));\n    if (tld === domain) {\n        return false;\n    }\n    return Object.hasOwnProperty.call(localTlds, tld);\n}\nfunction isAPIURL(host) {\n    var apis = {\n        \"ghelper.net\": 1,\n        \"ghelper.xyz\": 1,\n        \"ghelper.me\": 1,\n        \"ghelper.org\": 1,\n        \"onhop.net\": 1,\n        \"tcpbbr.net\": 1,\n        \"speedstunnel.com\": 1,\n        \"172.105.238.155\": 1,\n        \"172.105.220.19\": 1,\n        \"chromehelper.net\": 1\n    };\n    return testDomain(host, apis, false);\n}\nfunction isPrivateIp(ip) {\n    return /^(::f{4}:)?10\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) || /^(::f{4}:)?192\\.168\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) || /^(::f{4}:)?172\\.(1[6-9]|2\\d|30|31)\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) || /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) || /^(::f{4}:)?169\\.254\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) || /^f[cd][0-9a-f]{2}:/i.test(ip) || /^fe80:/i.test(ip) || /^::1$/.test(ip) || /^::$/.test(ip);\n}\nfunction FindProxyForURL(url, host) {\n    if (isPlainHostName(host) || isPrivateIp(host) || isAPIURL(host) || isLocalTestDomain(host) || host === 'localhost') {\n        return direct;\n    }\n    if (!ipRegExp.test(host)) {\n        if (testDomain(host, user_direct_domains)) {\n            return direct\n        }\n        for (pid in user_proxy_domains) {\n            if (testDomain(host, user_proxy_domains[pid])) {\n                return user_proxy[pid]\n            }\n        }\n        for (pid in system_proxy_domains) {\n            if (testDomain(host, system_proxy_domains[pid])) {\n                return system_proxy[pid]\n            }\n        }\n    }\n    return direct;\n}","profileType":"PacProfile","revision":"173cea5d43f"},"+igg":{"color":"#49afcd","name":"igg","pacScript":"var proxy = \"HTTPS jp.mzkservice.com:443;HTTPS us.fv.qqwx8.xyz:13389; DIRECT\";\n\nvar direct = 'DIRECT;';\n\n\nvar domainsUsingProxy = [\"googleapis.com\",\"googlecode.com\",\"googleusercontent.com\",\"ggpht.com\",\"gstatic.com\",\"gmail.com\",\"googlegroups.com\",\"googleratings.com\",\"google.com.hk\",\"google.com.tw\",\"google.co.jp\",\"google.co.kr\",\"google.co.th\",\"google.com.vn\",\"google.com.sg\",\"google.com.my\",\"google.com.ru\",\"google.ae\",\"google.com.sa\",\"google.co.in\",\"google.com.np\",\"google.de\",\"google.com.kw\",\"google.com.co\",\"google.fr\",\"google.co.uk\",\"google.it\",\"google.gr\",\"google.pt\",\"google.es\",\"google.co.il\",\"google.ch\",\"google.se\",\"google.nl\",\"google.be\",\"google.at\",\"google.pl\",\"google.pt\",\"google.es\",\"google.fi\",\"google.nl\",\"google.co.hu\",\"google.com.tr\",\"google.ro\",\"google.dk\",\"google.no\",\"google.com.au\",\"google.co.nz\",\"google.ca\",\"google.com\",\"google.com.mx\",\"google.com.br\",\"google.com.ar\",\"google.cl\",\"google.com.pe\",\"google.com.eg\",\"google.com.pa\",\"google.lt\",\"google.bi\",\"google.pn\",\"google.li\",\"google.com.nf\",\"google.vg\",\"google.mw\",\"google.fm\",\"google.sh\",\"google.cd\",\"google.ms\",\"google.co.cr\",\"google.lv\",\"google.ie\",\"google.co.gg\",\"google.co.je\",\"google.pr\",\"google.com.py\",\"google.gm\",\"google.td\",\"google.com.ua\",\"google.co.ve\",\"google.com.tr\",\"google.com.mt\",\"google.com.uy\",\"google.hn\",\"google.com.ni\",\"google.gl\",\"google.kz\",\"google.sm\",\"google.co.mu\",\"google.as\",\"google.uz\",\"google.rw\",\"google.cz\",\"google.ru\",\"google.rs\",\"google.md\",\"google.co.id\",\"google.com.tj\",\"thinkwithgoogle.com\",\"googletagmanager.com\",\"golang.org\",\"tensorflow.org\",\"wikimedia.org\",\"wikipedia.org\",\"chrome.com\",\"android.com\",\"onedrive.com\",\"onedrive.live.com\"];\n\nvar localTlds = {\n  \".localhost\": 1, \n  \".test\": 1\n};\n\nfunction to_dict(domains) {\n    var domain_dict = {};\n    for (var i = 0; i < domains.length; i++) {\n        if (domains[i].endsWith(\".\")) {\n            domains[i] = domains[i].slice(0, -1)\n        }\n        var url_list = domains[i].split('.');\n\n        var domain_node = domain_dict;\n        for (var j = url_list.length; j > 0; j--) {\n            var node_name = url_list[j - 1];\n            if (!domain_node.hasOwnProperty(node_name)) {\n                if (j === 1) {\n                    domain_node[node_name] = true;\n                    break;\n                } else {\n                    domain_node[node_name] = {};\n                }\n            } else if (domain_node[node_name] === true) {\n                break;\n            }\n            domain_node = domain_node[node_name];\n        }\n    }\n    return domain_dict;\n}\n\ndomainsUsingProxy = to_dict(domainsUsingProxy);\n\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar ipRegExp = new RegExp(/^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/);\n\nfunction convertAddress(ipchars) {\n    var bytes = ipchars.split('.');\n    var result = ((bytes[0] & 0xff) << 24) |\n                 ((bytes[1] & 0xff) << 16) |\n                 ((bytes[2] & 0xff) <<  8) |\n                  (bytes[3] & 0xff);\n    return result;\n}\n\nfunction testDomain(host, domain_dict) {\n    var host_list = host.split('.')\n    var domain_node = domain_dict\n    for (var i = host_list.length; i > 0; i--) {\n        var node_name = host_list[i - 1]\n        if (domain_node.hasOwnProperty(node_name)) {\n            if (domain_node[node_name] === true) {\n                return true;\n            } else {\n                domain_node = domain_node[node_name]\n            }\n\n        }\n        else {\n            return false;\n        }\n    }\n    return false;\n}\n\n\nfunction isLocalTestDomain(domain) {\n    // Chrome uses .test as testing gTLD.\n    var tld = domain.substring(domain.lastIndexOf('.'));\n    if (tld === domain) {\n        return false;\n    }\n    return Object.hasOwnProperty.call(localTlds, tld);\n}\n\nvar its_testdomain = {\"free1.edge.itestspeed.xyz\":\"us3.mzkservice.com:443\",\"free2.edge.itestspeed.xyz\":\"us.mzke5.buzz:443\",\"free3.edge.itestspeed.xyz\":\"jp.mzkservice.com:443\",\"free4.edge.itestspeed.xyz\":\"hk500.us.edge.qqwx8.xyz:3389\",\"free5.edge.itestspeed.xyz\":\"us.fv.qqwx8.xyz:13389\"};\nfunction isTestSpeedDomain(host) {\n    if (typeof its_testdomain[host] !== \"undefined\") {\n        return \"HTTPS \" + its_testdomain[host] + \";\";\n    }\n    return false;\n}\n\n\nfunction isPrivateIp(ip) {\n  return /^(::f{4}:)?10\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) ||\n  /^(::f{4}:)?192\\.168\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) ||\n  /^(::f{4}:)?172\\.(1[6-9]|2\\d|30|31)\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) ||\n  /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) ||\n  /^(::f{4}:)?169\\.254\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(ip) ||\n  /^f[cd][0-9a-f]{2}:/i.test(ip) ||\n  /^fe80:/i.test(ip) ||\n  /^::1$/.test(ip) ||\n  /^::$/.test(ip);\n}\n\nfunction FindProxyForURL(url, host) {\n    if (isPlainHostName(host)\n     || isPrivateIp(host)\n     || isLocalTestDomain(host)\n     || host === 'localhost') {\n        return direct;\n    }\n\n    if(/itestspeed\\.xyz$/ig.test(host)) {\n        its = isTestSpeedDomain(host);\n        if(its !== false) return its;\n    }\n\n    if (!ipRegExp.test(host)) {\n        if (testDomain(host, domainsUsingProxy)) {\n            return proxy;\n        }\n    } \n\n    return direct;\n}","profileType":"PacProfile"},"+kali burpsuite连接":{"bypassList":[{"conditionType":"BypassCondition","pattern":"127.0.0.1"},{"conditionType":"BypassCondition","pattern":"[::1]"},{"conditionType":"BypassCondition","pattern":"localhost"}],"color":"#ca0","fallbackProxy":{"host":"192.168.1.104","port":8080,"scheme":"http"},"name":"kali burpsuite连接","profileType":"FixedProfile","revision":"169a96c7f8d"},"+ssr代理":{"auth":{},"bypassList":[{"conditionType":"BypassCondition","pattern":"127.0.0.1"},{"conditionType":"BypassCondition","pattern":"[::1]"},{"conditionType":"BypassCondition","pattern":"localhost"}],"color":"#d63","fallbackProxy":{"host":"127.0.0.1","port":1080,"scheme":"socks5"},"name":"ssr代理","profileType":"FixedProfile","revision":"16a6a0da640"},"+v2rayN":{"bypassList":[{"conditionType":"BypassCondition","pattern":"127.0.0.1"},{"conditionType":"BypassCondition","pattern":"[::1]"},{"conditionType":"BypassCondition","pattern":"localhost"}],"color":"#5b5","fallbackProxy":{"host":"127.0.0.1","port":10808,"scheme":"socks5"},"name":"v2rayN","profileType":"FixedProfile","revision":"16ea2fc74d7"},"+当前梯子切换":{"color":"#d497ee","defaultProfileName":"ssr代理","name":"当前梯子切换","profileType":"VirtualProfile","revision":"173449d07a4","rules":[]},"+真全网切换":{"color":"#5b5","defaultProfileName":"__ruleListOf_真全网切换","name":"真全网切换","profileType":"SwitchProfile","revision":"1707f5322f7","rules":[{"condition":{"conditionType":"HostRegexCondition","pattern":"localhost"},"note":"去除本地路径","profileName":"direct"},{"condition":{"conditionType":"IpCondition","ip":"0.0.0.0","prefixLength":0},"note":"纯网页地址","profileName":"direct"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*alibaba*"},"note":"阿里","profileName":"direct"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*taobao*"},"note":"淘宝","profileName":"direct"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*bilibili*"},"note":"去除bilibili","profileName":"direct"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*sina*"},"note":"新浪","profileName":"direct"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*gist.github.com*"},"note":"GitHub gist界面","profileName":"direct"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*github*"},"note":"github官网","profileName":"direct"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.cn"},"note":"去除中国域名","profileName":"direct"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.fonts.googleapis.com"},"note":"谷歌字体接口","profileName":"direct"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*chromereleases.googleblog.com*"},"note":"谷歌浏览器更新日志","profileName":"ssr代理"},{"condition":{"conditionType":"HostRegexCondition","pattern":"youtu\\.{0,1}be"},"note":"油管","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.googlevideo.com*"},"note":"油管相关网站","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.ggpht.com"},"note":"油管相关网站","profileName":"谷歌访问助手"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*ytimg.com*"},"note":"油管相关网站","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*csp.withgoogle.com"},"note":"csp跨站点脚本攻击防御","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.chromium.org"},"note":"chromium论坛","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.dropbox.*"},"note":"dropbox","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*facebook*"},"note":"Facebook","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*pinterest*"},"note":"pinterest","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.a2z.com"},"note":"pinterest相关","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.cedexis*"},"note":"pinterest相关","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*instagram*"},"note":"ins","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*twitter*"},"note":"推特","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.twimg.com"},"note":"推特相关","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*t.co"},"note":"推特相关","profileName":"谷歌访问助手"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*nico*"},"note":"N站","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostRegexCondition","pattern":"pixiv?!.cat"},"note":"P站","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"i.pximg.net"},"note":"P站图片资源","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*blog.google*"},"profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*tumblr*"},"note":"汤不热","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.accountkit.com"},"profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.pinimg.com"},"profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*windscribe*"},"note":"vpn账号官网","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*voachinese*"},"profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*telegram*"},"note":"telegram","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*t.me*"},"note":"telegram短域名","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.telesco.pe"},"note":"telegram资源网站","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"updates.tdesktop.com"},"note":"telegram下载","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.imgur.com"},"note":"imgur图床","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*www.dm530.net*"},"note":"风车动漫pc网址","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostRegexCondition","pattern":"woocloud\\.(top|online|icu)"},"note":"免费机场","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*996icu.tv"},"note":"机场","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*dev.chromium.org*"},"note":"chromium","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*distillvideo.com*"},"note":"在线视频下载网站","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.v2ray.*"},"note":"v2ray","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.fanqiangdang.com"},"note":"科学上网网址","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostRegexCondition","pattern":"e[x\\-]hentai\\.org"},"note":"ehentai","profileName":"当前梯子切换"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*chrome*"},"note":"谷歌云控制台域名","profileName":"谷歌访问助手"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*.tensorflow.org"},"note":"tensorflow官网","profileName":"谷歌访问助手"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*www.gstatic.com"},"note":"谷歌静态资源","profileName":"direct"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*gstatic.com"},"note":"谷歌云控制台域名","profileName":"谷歌访问助手"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*gmail.com"},"note":"gmail邮箱","profileName":"谷歌访问助手"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*goo.gl*"},"note":"谷歌短域名","profileName":"谷歌访问助手"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*google*"},"note":"谷歌","profileName":"谷歌访问助手"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*wikipedia*"},"note":"维基","profileName":"谷歌访问助手"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*wikimedia*"},"note":"谷歌云控制台域名","profileName":"谷歌访问助手"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"*android*"},"note":"安卓","profileName":"谷歌上网助手（非VIP）"},{"condition":{"conditionType":"HostWildcardCondition","pattern":"appspot.com"},"note":"谷歌云控制台域名","profileName":"谷歌上网助手（非VIP）"}]},"+谷歌上网助手（非VIP）":{"color":"#d497ee","name":"谷歌上网助手（非VIP）","pacScript":"var wall_proxy = \"DIRECT;\";\nvar ip_proxy = wall_proxy;\nvar nowall_proxy = \"DIRECT;\";\nvar direct = \"DIRECT;\";\n\n\nfunction FindProxyForURL(url, host) {\n\n    if (host == \"android.com\" || shExpMatch(host, \"*.android.com\") || host == \"appspot.com\" || shExpMatch(host, \"*.appspot.com\")) {\n        return \"HTTPS hgc2.ghelper.net:3389;HTTPS www.copyplay.net:3389;HTTPS hgc.ghelper.net:3389\";\n    }\n    if (host == \"gstatic.com\" || shExpMatch(host, \"*.gstatic.com\") || host == \"googleusercontent.com\" || shExpMatch(host, \"*.googleusercontent.com\") || host == \"gvt2.com\" || shExpMatch(host, \"*.gvt2.com\") || host == \"gvt3.com\" || shExpMatch(host, \"*.gvt3.com\") || host == \"ggpht.com\" || shExpMatch(host, \"*.ggpht.com\") || host == \"googleapis.com\" || shExpMatch(host, \"*.googleapis.com\") || host == \"google.com.hk\" || shExpMatch(host, \"*.google.com.hk\") || host == \"google.com.tw\" || shExpMatch(host, \"*.google.com.tw\") || host == \"google.com\" || shExpMatch(host, \"*.google.com\") || host == \"gmail.com\" || shExpMatch(host, \"*.gmail.com\") || host == \"ggpht.com\" || shExpMatch(host, \"*.ggpht.com\") || host == \"chrome.com\" || shExpMatch(host, \"*.chrome.com\") || host == \"googleadservices.com\" || shExpMatch(host, \"*.googleadservices.com\") || host == \"googleusercontent.com\" || shExpMatch(host, \"*.googleusercontent.com\") || host == \"googletagservices.com\" || shExpMatch(host, \"*.googletagservices.com\") || host == \"googlesyndication.com\" || shExpMatch(host, \"*.googlesyndication.com\") || host == \"google.co.jp\" || shExpMatch(host, \"*.google.co.jp\") || host == \"googlesource.com\" || shExpMatch(host, \"*.googlesource.com\") || host == \"googleblog.com\" || shExpMatch(host, \"*.googleblog.com\") || host == \"admob.com\" || shExpMatch(host, \"*.admob.com\")) {\nalert(\"1\");\n        return \"HTTPS hgc2.ghelper.net:3389;HTTPS www.copyplay.net:3389;HTTPS hgc.ghelper.net:3389\";\n    }\n    if (host == \"wikipedia.org\" || shExpMatch(host, \"*.wikipedia.org\")) {\n        return \"HTTPS hgc2.ghelper.net:3389;HTTPS www.copyplay.net:3389;HTTPS hgc.ghelper.net:3389\";\n    }\n    if (host == \"dropbox.com\" || shExpMatch(host, \"*.dropbox.com\")) {\n        return \"HTTPS hgc2.ghelper.net:3389;HTTPS www.copyplay.net:3389;HTTPS hgc.ghelper.net:3389\";\n    }\n    return direct;\n}","profileType":"PacProfile","revision":"16d44cb38ea"},"+谷歌服务助手":{"color":"#49afcd","name":"谷歌服务助手","pacScript":"function FindProxyForURL(url, host) {\n    let domains = {\n        \"google.com\": 1,\n        \"google.hk\": 1,\n        \"google.co.kr\": 1,\n        \"google.jp\": 1,\n        \"google.com.hk\": 1,\n        \"google.com.sg\": 1,\n        \"google.co.jp\": 1,\n        \"gmail.com\": 1,\n        \"gstatic.com\": 1,\n        \"googleusercontent.com\": 1,\n        \"youtu.be\": 1,\n        \"youtube.com\": 1,\n        \"ytimg.com\": 1,\n        \"googlevideo.com\": 1,\n        \"ggpht.com\": 1,\n        \"youtube-nocookie.com\": 1,\n        \"googleadservices.com\": 1,\n        \"googleapis.com\": 1,\n        \"googleartproject.com\": 1,\n        \"googleblog.com\": 1,\n        \"googlebot.com\": 1,\n        \"googlechinawebmaster.com\": 1,\n        \"googlecode.com\": 1,\n        \"googlecommerce.com\": 1,\n        \"googledomains.com\": 1,\n        \"googlearth.com\": 1,\n        \"googleearth.com\": 1,\n        \"googledrive.com\": 1,\n        \"googlegroups.com\": 1,\n        \"googlehosted.com\": 1,\n        \"googleideas.com\": 1,\n        \"googleinsidesearch.com\": 1,\n        \"googlelabs.com\": 1,\n        \"googlemail.com\": 1,\n        \"googlemashups.com\": 1,\n        \"googlepagecreator.com\": 1,\n        \"googlescholar.com\": 1,\n        \"googlesource.com\": 1,\n        \"googlesyndication.com\": 1,\n        \"googleweblight.com\": 1,\n        \"googlezip.net\": 1,\n        \"gvt0.com\": 1,\n        \"gvt1.com\": 1,\n        \"gvt2.com\": 1,\n        \"gvt3.com\": 1,\n        \"youtubeeducation.com\": 1,\n        \"youtubegaming.com\": 1,\n        \"yt.be\": 1,\n        \"zynamics.com\": 1,\n        \"android.com\": 1,\n        \"twimg.com\": 1,\n        \"twitter.com\": 1,\n        \"fbcdn.net\": 1,\n        \"facebook.com\": 1,\n        \"facebook.net\": 1,\n        \"wikimedia.org\": 1,\n        \"pinterest.com\": 1,\n        \"accountkit.com\": 1,\n        \"pinimg.com\": 1,\n        \"wikipedia.org\": 1,\n        \"ipip.net\": 1,\n        \"golang.org\": 1,\n        \"freenet.pro\": 1,\n        \"appspot.com\": 1,\n        \"chromium.org\": 1,\n        \"google-analytics.com\": 1,\n        \"doubleclick.net\": 1,\n        \"googletagmanager.com\": 1,\n        \"t.co\": 1,\n        \"goo.gl\": 1,\n        \"you.tb\": 1,\n        \"telegram.me\": 1,\n        \"t.me\": 1,\n        \"telegram.org\": 1,\n        \"blogspot.com\": 1,\n        \"blogger.com\": 1,\n        \"chrome.com\": 1\n    };\n    let p = {\n        y: \"SOCKS5 y.kuomu.xyz:1443;SOCKS5 123.125.115.110:1443;\",\n        b: \"SOCKS5 b.kuomu.xyz:1443;SOCKS5 144.202.99.26:1443;\",\n        g: \"SOCKS5 g.kuomu.xyz:1443;SOCKS5 144.202.99.26:1443;\",\n        ini: \"   let hasOwnProperty = Object.hasOwnProperty;SOCKS5 ini.kuomu.xyz:1443;SOCKS5 123.125.115.110:1443;\",\n    }\n    let direct = \"DIRECT;\";\n \n    let suffix;\n    let pos = host.lastIndexOf(\".\");\n    if (url.substring(0, 6) !== \"https:\") {\n        return direct\n    }\n    while (1) {\n        suffix = host.substring(pos + 1);\n        if (suffix === \"youtube.com\") {\n            return p.y\n        }\n        if (suffix === \"blogspot.com\" || suffix === \"blogger.com\") {\n            return p.b\n        }\n        if (suffix === \"google.com\" || suffix === \"chrome.com\") {\n            return p.g\n        }\n        if (hasOwnProperty.call(domains, suffix)) {\n            return p.ini\n        }\n        if (pos <= 0) {\n            break;\n        }\n        pos = host.lastIndexOf(\".\", pos - 1);\n    }\n    return direct;\n}","profileType":"PacProfile","revision":"16d4743fd84"},"+谷歌访问助手":{"color":"#49afcd","name":"谷歌访问助手","pacScript":"var ghelper=\"HTTPS hk-hgc.ghelper.net:443;HTTPS hkbn-home-01.ghelper.net:443;HTTPS hk-hkt-05.ghelper.net:3389\";\nvar igg=\"HTTPS jp.mzkservice.com:443;HTTPS us.fv.qqwx8.xyz:13389;\";\nfunction FindProxyForURL(url, host) {\nvar D=\"DIRECT;\", P = igg+\"HTTPS www.bannin.xyz:8001;HTTPS cdn.poweris.xyz:7766;\" + ghelper;\n    var H = {\n        \"googleapis.com\":1,\n        \"googlecode.com\":1,\n        \"googleusercontent.com\":1,\n        \"ggpht.com\":1,\n        \"gstatic.com\":1,\n        \"gmail.com\":1,\n        \"googlegroups.com\":1,\n        \"goo.gl\":1,\n        \"googleratings.com\":1,\n        \"test-ggfwzs-proxy.com\":1,\n        \"t.co\":1,\n        \"google.com.hk\":1,\n        \"google.com.tw\":1,\n        \"google.co.jp\" :1,\n        \"google.co.kr\" :1,\n        \"google.co.th\" :1,\n        \"google.com.vn\" :1,\n        \"google.com.sg\":1,\n        \"google.com.my\":1,\n        \"google.com.ru\":1,\n        \"google.ae\"    :1,\n        \"google.com.sa\":1,\n        \"google.co.in\" :1,\n        \"google.com.np\":1,\n        \"google.de\"    :1,\n        \"google.com.kw\"    :1,\n        \"google.com.co\"    :1,\n        \"google.fr\"    :1,\n        \"google.co.uk\" :1,\n        \"google.it\"    :1,\n        \"google.gr\"    :1,\n        \"google.pt\"    :1,\n        \"google.es\"    :1,\n        \"google.co.il\" :1,\n        \"google.ch\"    :1,\n        \"google.se\"    :1,\n        \"google.nl\"    :1,\n        \"google.be\"    :1,\n        \"google.at\"    :1,\n        \"google.pl\"    :1,\n        \"google.pt\"    :1,\n        \"google.es\"    :1,\n        \"google.fi\"    :1,\n        \"google.nl\"    :1,\n        \"google.co.hu\" :1,\n        \"google.com.tr\":1,\n        \"google.ro\"    :1,\n        \"google.dk\"    :1,\n        \"google.no\"    :1,\n        \"google.com.au\":1,\n        \"google.co.nz\" :1,\n        \"google.ca\"    :1,\n        \"google.com\"   :1,\n        \"google.com.mx\":1,\n        \"google.com.br\":1,\n        \"google.com.ar\":1,\n        \"google.cl\"    :1,\n        \"google.com.pe\":1,\n        \"google.com.eg\":1,\n        \"google.com.pa\":1,\n        \"google.lt\"    :1,\n        \"google.bi\"    :1,\n        \"google.pn\"    :1,\n        \"google.li\"    :1,\n        \"google.com.nf\":1,\n        \"google.vg\"    :1,\n        \"google.mw\"    :1,\n        \"google.fm\"    :1,\n        \"google.sh\"    :1,\n        \"google.cd\"    :1,\n        \"google.ms\"    :1,\n        \"google.co.cr\" :1,\n        \"google.lv\"    :1,\n        \"google.ie\"    :1,\n        \"google.co.gg\" :1,\n        \"google.co.je\" :1,\n        \"google.pr\"    :1,\n        \"google.com.py\":1,\n        \"google.gm\"    :1,\n        \"google.td\"    :1,\n        \"google.com.ua\":1,\n        \"google.co.ve\" :1,\n        \"google.com.tr\":1,\n        \"google.com.mt\":1,\n        \"google.com.uy\":1,\n        \"google.hn\"    :1,\n        \"google.com.ni\":1,\n        \"google.gl\"    :1,\n        \"google.kz\"    :1,\n        \"google.sm\"    :1,\n        \"google.co.mu\" :1,\n        \"google.as\"    :1,\n        \"google.uz\"    :1,\n        \"google.rw\"    :1,\n        \"google.cz\"    :1,\n        \"google.ru\"    :1,\n        \"google.rs\"    :1,\n        \"google.md\"    :1,\n        \"google.co.id\"    :1,\n        \"googletagmanager.com\"    :1,\n        \"accounts.youtube.com\"    :1,\n        \"google.com.tj\":1,\n        \"thinkwithgoogle.com\":1,\n        \"googletagmanager.com\":1,\n        \"android.com\":1,\n        \"wikimedia.org\":1,\n        \"golang.org\":1,\n        \"tensorflow.org\":1,\n        \"wikipedia.org\":1\n    };\n    var r = host.match(/([^.]*\\.([a-z,A-Z]*|com\\.[a-z]*|co\\.[a-z]*))$/)[1];\n    if(r && H.hasOwnProperty(r)) {\n        if(host == \"scholar.google.com\" || host == \"scholar.google.com.hk\" || host==\"scholar.googleusercontent.com\"){\n            return \"HTTPS static.dancemonkey.xyz:443;\" + ghelper;\n        }else if(host == \"mtalk.google.com\"  ){\n            return D;\n        }else{\n            return P;\n        }\n    }else{\n        return D;\n    }\n}","profileType":"PacProfile","revision":"173cea735f9"},"-addConditionsToBottom":false,"-confirmDeletion":true,"-downloadInterval":1440,"-enableQuickSwitch":true,"-monitorWebRequests":true,"-quickSwitchProfiles":[],"-refreshOnProfileChange":true,"-revertProxyChanges":true,"-showConditionTypes":1,"-showExternalProfile":true,"-showInspectMenu":true,"-startupProfileName":"","schemaVersion":2}